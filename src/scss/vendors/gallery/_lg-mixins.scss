// Vendor Prefixes
//
// All vendor mixins are deprecated as of v3.2.0 due to the introduction of
// Autoprefixer in our Gruntfile. They will be removed in v4.

// - Animations
// - Backface visibility
// - Box shadow
// - Box sizing
// - Content columns
// - Hyphens
// - Placeholder text
// - Transformations
// - Transitions
// - User Select
// - cursor grab

// Animations
@mixin animation($animation) {
  animation: $animation;
  animation: $animation;
  animation: $animation;
}

@mixin animation-name($name) {
  animation-name: $name;
  animation-name: $name;
}

@mixin animation-duration($duration) {
  animation-duration: $duration;
  animation-duration: $duration;
}

@mixin animation-timing-function($timing-function) {
  animation-timing-function: $timing-function;
  animation-timing-function: $timing-function;
}

@mixin animation-delay($delay) {
  animation-delay: $delay;
  animation-delay: $delay;
}

@mixin animation-iteration-count($iteration-count) {
  animation-iteration-count: $iteration-count;
  animation-iteration-count: $iteration-count;
}

@mixin animation-direction($direction) {
  animation-direction: $direction;
  animation-direction: $direction;
}

@mixin animation-fill-mode($fill-mode) {
  animation-fill-mode: $fill-mode;
  animation-fill-mode: $fill-mode;
}

@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }

  @keyframes #{$name} {
    @content;
  }

  @keyframes #{$name} {
    @content;
  }

  @keyframes #{$name} {
    @content;
  }
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden`

@mixin backface-visibility($visibility) {
  backface-visibility: $visibility;
  backface-visibility: $visibility;
  backface-visibility: $visibility;
}

// Drop shadows
//
// Note: Deprecated `.box-shadow()` as of v3.1.0 since all of Bootstrap's
// supported browsers that have box shadow capabilities now support it.

@mixin box-shadow($shadow...) {
  box-shadow: $shadow; // iOS <4.3 & Android <4.1
  box-shadow: $shadow;
}

// Box sizing
@mixin box-sizing($boxmodel) {
  box-sizing: $boxmodel;
  box-sizing: $boxmodel;
  box-sizing: $boxmodel;
}

// CSS3 Content Columns
@mixin content-columns($column-count, $column-gap: $grid-gutter-width) {
  column-count: $column-count;
  column-count: $column-count;
  column-count: $column-count;
  column-gap: $column-gap;
  column-gap: $column-gap;
  column-gap: $column-gap;
}

// Optional hyphenation
@mixin hyphens($mode: auto) {
  word-wrap: break-word;
  hyphens: $mode;
  hyphens: $mode;
  hyphens: $mode; // IE10+
  hyphens: $mode;
  hyphens: $mode;
}

// Transformations
@mixin scale($ratio...) {
  transform: scale($ratio);
  transform: scale($ratio); // IE9 only
  transform: scale($ratio);
  transform: scale($ratio);
}

@mixin scaleX($ratio) {
  transform: scaleX($ratio);
  transform: scaleX($ratio); // IE9 only
  transform: scaleX($ratio);
  transform: scaleX($ratio);
}

@mixin scaleY($ratio) {
  transform: scaleY($ratio);
  transform: scaleY($ratio); // IE9 only
  transform: scaleY($ratio);
  transform: scaleY($ratio);
}

@mixin skew($x, $y) {
  transform: skewX($x) skewY($y);
  transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
  transform: skewX($x) skewY($y);
  transform: skewX($x) skewY($y);
}

@mixin translate($x, $y) {
  transform: translate($x, $y);
  transform: translate($x, $y); // IE9 only
  transform: translate($x, $y);
  transform: translate($x, $y);
}

@mixin translate3d($x, $y, $z) {
  transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}

@mixin scale3d($x, $y, $z) {
  transform: scale3d($x, $y, $z);
  transform: scale3d($x, $y, $z);
}

@mixin rotate($degrees) {
  transform: rotate($degrees);
  transform: rotate($degrees); // IE9 only
  transform: rotate($degrees);
  transform: rotate($degrees);
}

@mixin rotateX($degrees) {
  transform: rotateX($degrees);
  transform: rotateX($degrees); // IE9 only
  transform: rotateX($degrees);
  transform: rotateX($degrees);
}

@mixin rotateY($degrees) {
  transform: rotateY($degrees);
  transform: rotateY($degrees); // IE9 only
  transform: rotateY($degrees);
  transform: rotateY($degrees);
}

@mixin perspective($perspective) {
  perspective: $perspective;
  perspective: $perspective;
  perspective: $perspective;
}

@mixin perspective-origin($perspective) {
  perspective-origin: $perspective;
  perspective-origin: $perspective;
  perspective-origin: $perspective;
}

@mixin transform-origin($origin) {
  transform-origin: $origin;
  transform-origin: $origin;
  transform-origin: $origin; // IE9 only
  transform-origin: $origin;
}

@mixin transform($transforms) {
  transform: $transforms;
  transform: $transforms;
  transform: $transforms;
  transform: $transforms;
  transform: $transforms;
}

// Transitions

@mixin transition($transition...) {
  transition: $transition;
  transition: $transition;
  transition: $transition;
}

@mixin transition-property($transition-property...) {
  transition-property: $transition-property;
  transition-property: $transition-property;
}

@mixin transition-delay($transition-delay) {
  transition-delay: $transition-delay;
  transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration...) {
  transition-duration: $transition-duration;
  transition-duration: $transition-duration;
}

@mixin transition-timing-function($timing-function) {
  transition-timing-function: $timing-function;
  transition-timing-function: $timing-function;
}

@mixin transition-transform($transition...) {
  transition: transform $transition;
}

// transition custom

@function prefix($property, $prefixes: webkit moz o ms) {
  $vendor-prefixed-properties: transform background-clip background-size;
  $result: ();

  @each $prefix in $prefixes {
    @if index($vendor-prefixed-properties, $property) {
      $property: -#{$prefix}-#{$property};
    }

    $result: append($result, $property);
  }

  @return $result;
}

@function trans-prefix($transition, $prefix: moz) {
  $prefixed: ();

  @each $trans in $transition {
    $prop-name: nth($trans, 1);
    $vendor-prop-name: prefix($prop-name, $prefix);
    $prop-vals: nth($trans, 2);
    $prefixed: append($prefixed, $vendor-prop-name $prop-vals, comma);
  }

  @return $prefixed;
}

@mixin transitionCustom($values...) {
  $transitions: ();

  transition: trans-prefix($transitions, webkit);
  transition: trans-prefix($transitions, moz);
  transition: trans-prefix($transitions, o);
  transition: $values;

  @each $declaration in $values {
    $prop: nth($declaration, 1);
    $prop-opts: ();
    $length: length($declaration);

    @if $length >= 2 {
      @for $i from 2 through $length {
        $prop-opts: append($prop-opts, nth($declaration, $i));
      }
    }

    $trans: $prop, $prop-opts;
    $transitions: append($transitions, $trans, comma);
  }
}

// User select
// For selecting text on the page

@mixin user-select($select) {
  user-select: $select;
  user-select: $select;
  user-select: $select; // IE10+
  user-select: $select;
}

// mouse grab

@mixin grab-cursor {
  cursor: grab;
}

@mixin grabbing-cursor {
  cursor: grabbing;
}
